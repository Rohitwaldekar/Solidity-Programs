pragma solidity >=0.4.22 <0.6.0;

contract UserInformation {
    //Profile data
    address private uId;
    address private uPhoto;
    address private uStatus;
    bool private uSex;
    string private uName;
    string private uDOB;
    string private uCity;
    string private uCollege;
    
    constructor(address id, address photo, address status, bool sex, string memory name, string memory dob, string memory city, string memory college) public {
        uId = id;
        uPhoto = photo;
        uStatus = status;
        uSex = sex;
        uName = name;
        uDOB = dob;
        uCity = city;
        uCollege = college;
    }
    
    function getUserInformation() public returns(address, address, address, bool, string, string, string, string) {
        return (uId, uPhoto, uStatus, uSex, uName, uDOB, uCity, uCollege);
    }
    
    function setId(address id) public {
        uId = id;
    }
    
    function setPhoto(address photo) public {
        uPhoto = photo;
    }
    
    function setSatus(address status) public {
        uStatus = status;
    }
    
    function setSex(bool sex) public {
        uSex = sex;
    }
    
    function setName(string name) public {
        uName = name;
    }
    
    function setDOB(string dob) public {
        uDOB = dob;   
    }
    
    function setCity(string city) public {
        uCity = city;
    }
    
    function setCollege(string college) public {
        uCollege = college;
    }
    
    function getId() public returns(address) {
        return uId;
    }
    
    function getPhoto() public returns(address) {
        return uPhoto;
    }
    
    function getSatus() public returns(address) {
        return uStatus;
    }
    
    function getSex() public returns(bool) {
        return uSex;
    }
    
    function getName() public returns(string) {
        return uName;
    }
    
    function getDOB() public returns(string) {
        return uDOB;   
    }
    
    function getCity() public returns(string) {
        return uCity;
    }
    
    function getCollege() public returns(string) {
        return uCollege;
    }
}


contract Users {
    //Map uName with uId
    mapping(string => address) uList;
    
    function addUser(string name, address id) public {
        uList[name] = id;
    }
    
    function getUSer(string name) public returns(address) {
        return uList[name];
    }
}


contract UserAuthentication {
    //User credetials
    string private uName;
    string private uPass;
    address private uId;
    string private question;
    string private answer;
    
    function regiter(string name, string pass, address id, string que, string ans) public {
        uName = name;
        uPass = pass;
        uId = id;
        question = que;
        answer = ans;
    }
    
    function authenticate(string name, string pass) public returns(bool) {
        if(uName == name && uPass == pass) {
            return true;
        }
        else
            return false;
    }
}


contract UserContents {
    //User Media data
    address private sId;
    address private rId;
    address private contentId;
    string private dateAndTime;
    
    function trasation(address s, address r, address content, string dat) public {
        sId = s;
        rId = r;
        contentId = content;
        dateAndTime = dat;
    }
}


contract UserFriends {
    //User Friends
    address private uId;
    address[] private friendList;
    
    function getFriend(address id) public returns(address []) {
        return friendList;
    }
    
    function addFriend(address f) public {
        friendList = f;
    }
    
    function delFriend(address f) public {
        
    }
}


contract UserGroups {
    //User Groups   
    address private uId;
    address[] private groupList;
    
    function addGroup(address g) public {
        
    }
    
    function delGroup(address g) public {
        
    }
}


contract GroupInformation {
    //Group Details
    address private gId;
    address private gPhoto;
    string private gName;
    string private gIntroduction;
    
    function setId(address id) public {
        gId = id;
    }
    
    function setPhoto(address photo) public {
        gPhoto = photo;
    }
    
    function setName(string name) public {
        gName = name;
    }
    
    function setIntroductio(string intro) public{
        gIntroduction = intro;   
    }
    
    function getId() public returns(address) {
        return gId;
    }
    
    function getPhoto() public returns(address) {
        return gPhoto;
    }
    
    function getName() public returns(string) {
        return gName;
    }
    
    function getIntroduction() public returns(string) {
        return gIntroduction;   
    }
}


contract Groups {
    //Map gName with gId
    mapping(string => address) gList;
    
    function addGroup(string name, address id) public {
        gList[name] = id;
    }
    
    function getGroup(string name) public returns(address) {
        return gList[name];
    }
}


contract GroupContents {
    //Group Media data
    address private gId;
    address private contentId;
    string private dateAndTime;
    
    function trasation(address id, address content, string dat) public {
        gId = id;
        contentId = content;
        dateAndTime = dat;
    } 
}


contract GroupMembers {
    //Group Members
    address private gId;
    address[] private memberList;
    
    function getMembers(address id) public returns(address []) {
        return memberList;
    }
    
    function addMember(address m) public {
        memberList = m;
    }
    
    function delMember(address m) public {
        
    }
}
